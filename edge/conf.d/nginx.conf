# Upstreams with connection pooling
upstream backend_upstream { 
  server gf_backend:8000; 
  keepalive 64;
  keepalive_requests 1000;
  keepalive_timeout 75s;
}

upstream frontend_upstream { 
  server gf_frontend:80;  
  keepalive 32;
  keepalive_requests 500;
  keepalive_timeout 60s;
}

# HTTP server - redirects to HTTPS
server {
  listen 80;
  listen [::]:80;
  server_name fitwellfast.com www.fitwellfast.com;

  # ACME challenge for Let's Encrypt
  location /.well-known/acme-challenge/ { 
    root /var/www/certbot; 
    try_files $uri =404; 
  }
  
  # Redirect all HTTP to HTTPS
  location / { 
    return 301 https://$host$request_uri; 
  }
}

# HTTPS server - main application
server {
  listen 443 ssl;
  listen [::]:443 ssl;
  http2 on;
  server_name fitwellfast.com www.fitwellfast.com;

  # SSL configuration
  ssl_certificate     /etc/letsencrypt/live/fitwellfast.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/fitwellfast.com/privkey.pem;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers HIGH:!aNULL:!MD5;
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;

  # Security headers (relaxed CSP for modern web apps)
  add_header X-Frame-Options DENY always;
  add_header X-Content-Type-Options nosniff always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
  # Relaxed CSP for React/Vite apps with WebGL, workers, and inline styles
  add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval' blob:; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; connect-src 'self' wss: ws:; worker-src 'self' blob:; child-src 'self' blob:; object-src 'none'; frame-ancestors 'none'" always;

  # Block common exploit probes
  include /etc/nginx/conf.d/block-probes.inc;

  # Performance tuning
  client_max_body_size 100M;
  client_body_buffer_size 1M;
  proxy_buffering on;
  proxy_buffer_size 4k;
  proxy_buffers 8 4k;
  proxy_busy_buffers_size 8k;

  # Health check endpoint
  location = /healthz {
    proxy_pass http://backend_upstream/healthz;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    access_log off;
  }

  # Backend API endpoints - ALL paths that need to hit FastAPI
  location ~ ^/(api|admin|files|accounts|graph3d|tags|busz|messages|produce|pipeline|graph)(/.*)?$ {
    proxy_pass http://backend_upstream;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";
    
    # Timeouts for API calls
    proxy_connect_timeout 10s;
    proxy_send_timeout 90s;
    proxy_read_timeout 90s;
    
    # WebSocket support for real-time features
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    
    # Disable buffering for SSE/streaming
    proxy_buffering off;
    proxy_cache off;
  }

  # Frontend with WebSocket support for Vite HMR
  location / {
    proxy_pass http://frontend_upstream;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # WebSocket upgrade for Vite HMR
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    
    # Timeouts
    proxy_connect_timeout 5s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    # Caching for static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
      proxy_pass http://frontend_upstream;
      proxy_cache_valid 200 1d;
      add_header Cache-Control "public, max-age=86400";
    }
  }
}

# WebSocket upgrade map
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}
