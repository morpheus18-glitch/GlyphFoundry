modules = ["nodejs-20", "bash", "rust-stable", "python-3.11", "postgresql-16", "go-1.24"]
[agent]
expertMode = true
integrations = ["python_log_in_with_replit:1.0.0"]

[nix]
channel = "stable-25_05"
packages = ["arrow-cpp", "cargo", "glibcLocales", "libiconv", "libxcrypt", "openssl", "pkg-config", "postgresql", "rustc", "opensshWithKerberos"]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Backend API"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Frontend Server"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Metrics Collector"

[[workflows.workflow]]
name = "Backend API"
author = "agent"

[workflows.workflow.metadata]
outputType = "console"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
waitForPort = 8000

[[workflows.workflow]]
name = "Frontend Server"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd frontend && npm run dev"
waitForPort = 5000

[workflows.workflow.metadata]
outputType = "webview"

[[workflows.workflow]]
name = "Metrics Collector"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd metrics-collector && GLYPH_API_URL=http://localhost:8000 TENANT_ID=metrics-collector COLLECTION_INTERVAL=2s MAX_METRICS_PER_BATCH=50 ./bin/collector"

[workflows.workflow.metadata]
outputType = "console"

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 8000
externalPort = 8000

[[ports]]
localPort = 37911
externalPort = 3000

[[ports]]
localPort = 40469
externalPort = 3003

[[ports]]
localPort = 40501
externalPort = 5173

[[ports]]
localPort = 41413
externalPort = 4200

[[ports]]
localPort = 41755
externalPort = 3002

[[ports]]
localPort = 44897
externalPort = 5000

[[ports]]
localPort = 45483
externalPort = 3001

[deployment]
deploymentTarget = "autoscale"
run = ["bash", "-c", "cd backend && gunicorn --bind=0.0.0.0:5000 --workers=4 --worker-class=uvicorn.workers.UvicornWorker --timeout=120 --keep-alive=2 app.main:app"]
build = ["bash", "-c", "cd frontend && npm install && npm run build"]
